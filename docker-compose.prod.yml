version: '3.5'
services:
  db:
    image: postgres
    restart: always
    env_file:
      - ./.env.prod.db
    volumes:
    - datadb:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - proxynet
  redis:
    image: redis
    expose:
      - 6379
    networks:
      - proxynet
  rabbit:
    image: rabbitmq
    restart: always
    hostname: "ecookbook"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
    expose:
    - 5672
    - 15672
    networks:
      - proxynet
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
    volumes:
    - dataes:/usr/share/elasticsearch/data
    expose:
    - 9200
    networks:
      - proxynet
  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A ecookbook worker -l info
    restart: always
    env_file:
      - ./.env.dev
    volumes:
    - .:/code
    depends_on:
      - db
      - rabbit
      - elasticsearch
      - redis
    networks:
      - proxynet
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn ecookbook.wsgi:application --bind 0.0.0.0:8000
    restart: always
    env_file:
      - ./.env.prod
    volumes:
      - static:/home/app/web/static
      - media:/home/app/web/media
    expose:
      - 8000
    depends_on:
      - db
      - rabbit
      - elasticsearch
      - redis
      - celery
    networks:
      - proxynet
  nginx:
    build: ./nginx
    volumes:
      - static:/home/app/web/static:ro
      - media:/home/app/web/media:ro
    ports:
      - 80:80
    depends_on:
      - web
    networks:
      - proxynet

volumes:
  datadb:
  dataes:
  static:
  media:
networks:
  proxynet:
